<?xml version="1.0" ?>
<!--
  Gazebo ROS wheel slip plugin and drawbar pull demo

  Try for example:

  To publish time-varying drawbar pull force:

    ros2 run gazebo_plugins wheel_slip_drawbar_pull_publisher.py

  To change slip compliance of a group of wheels:

    ros2 param set /trisphere_cycle_slip0/wheel_slip_rear slip_compliance_unitless_longitudinal 1.0
    ros2 param set /trisphere_cycle_slip1/wheel_slip_rear slip_compliance_unitless_longitudinal 0.0

  To get the current slip compliance of a group of wheels:

    ros2 param get /trisphere_cycle_slip1/wheel_slip_rear slip_compliance_unitless_longitudinal
-->
<sdf version="1.6">
  <world name="default">
    <gravity>0 0 -9.8</gravity>

    <include>
      <uri>model://ground_plane</uri>
    </include>
    <include>
      <uri>model://sun</uri>
    </include>

    <include>
      <uri>model://trisphere_cycle</uri>
      <name>trisphere_cycle_slip0</name>
      <pose>0 0 0  0 0 0</pose>
      <plugin name="force_drawbar_pull_trisphere_cycle_slip0" filename="libgazebo_ros_force.so">
        <ros>
          <remapping>gazebo_ros_force:=drawbar_pull</remapping>
        </ros>
        <link_name>frame</link_name>
        <force_frame>link</force_frame>
      </plugin>
      <plugin name="wheel_slip_front" filename="libgazebo_ros_wheel_slip.so">
        <ros>
          <namespace>trisphere_cycle_slip0</namespace>
        </ros>
        <wheel link_name="wheel_front">
          <slip_compliance_lateral>0</slip_compliance_lateral>
          <slip_compliance_longitudinal>0</slip_compliance_longitudinal>
          <wheel_normal_force>77</wheel_normal_force>
        </wheel>
      </plugin>
      <plugin name="wheel_slip_rear" filename="libgazebo_ros_wheel_slip.so">
        <ros>
          <namespace>trisphere_cycle_slip0</namespace>
        </ros>
        <wheel link_name="wheel_rear_left">
          <slip_compliance_lateral>0</slip_compliance_lateral>
          <slip_compliance_longitudinal>0</slip_compliance_longitudinal>
          <wheel_normal_force>32</wheel_normal_force>
        </wheel>
        <wheel link_name="wheel_rear_right">
          <slip_compliance_lateral>0</slip_compliance_lateral>
          <slip_compliance_longitudinal>0</slip_compliance_longitudinal>
          <wheel_normal_force>32</wheel_normal_force>
        </wheel>
      </plugin>
      <plugin name="joint_control" filename="libJointControlPlugin.so">
        <controller type="position">
          <joint>wheel_front_steer</joint>
          <target>0</target>
          <pid_gains>9 0 0.1</pid_gains>
        </controller>
        <controller type="velocity">
          <joint>wheel_rear_left_spin</joint>
          <joint>wheel_rear_right_spin</joint>
          <target>6.0</target>
          <pid_gains>9 0 0</pid_gains>
        </controller>
        <controller type="force">
          <joint>wheel_rear_left_spin</joint>
          <joint>wheel_rear_right_spin</joint>
          <target>2.15</target>
        </controller>
      </plugin>
    </include>

    <include>
      <uri>model://trisphere_cycle</uri>
      <name>trisphere_cycle_slip1</name>
      <pose>0 2 0  0 0 0</pose>
      <plugin name="force_drawbar_pull_trisphere_cycle_slip1" filename="libgazebo_ros_force.so">
        <ros>
          <remapping>gazebo_ros_force:=drawbar_pull</remapping>
        </ros>
        <link_name>frame</link_name>
        <force_frame>link</force_frame>
      </plugin>
      <plugin name="wheel_slip_front" filename="libgazebo_ros_wheel_slip.so">
        <ros>
          <namespace>trisphere_cycle_slip1</namespace>
        </ros>
        <wheel link_name="wheel_front">
          <slip_compliance_lateral>1</slip_compliance_lateral>
          <slip_compliance_longitudinal>1</slip_compliance_longitudinal>
          <wheel_normal_force>77</wheel_normal_force>
        </wheel>
      </plugin>
      <plugin name="wheel_slip_rear" filename="libgazebo_ros_wheel_slip.so">
        <ros>
          <namespace>trisphere_cycle_slip1</namespace>
        </ros>
        <wheel link_name="wheel_rear_left">
          <slip_compliance_lateral>1</slip_compliance_lateral>
          <slip_compliance_longitudinal>1</slip_compliance_longitudinal>
          <wheel_normal_force>32</wheel_normal_force>
        </wheel>
        <wheel link_name="wheel_rear_right">
          <slip_compliance_lateral>1</slip_compliance_lateral>
          <slip_compliance_longitudinal>1</slip_compliance_longitudinal>
          <wheel_normal_force>32</wheel_normal_force>
        </wheel>
      </plugin>
      <plugin name="joint_control" filename="libJointControlPlugin.so">
        <controller type="position">
          <joint>wheel_front_steer</joint>
          <target>0</target>
          <pid_gains>9 0 0.1</pid_gains>
        </controller>
        <controller type="velocity">
          <joint>wheel_rear_left_spin</joint>
          <joint>wheel_rear_right_spin</joint>
          <target>6.0</target>
          <pid_gains>9 0 0</pid_gains>
        </controller>
        <controller type="force">
          <joint>wheel_rear_left_spin</joint>
          <joint>wheel_rear_right_spin</joint>
          <target>2.15</target>
        </controller>
      </plugin>
    </include>

    <gui fullscreen='0'>
      <camera name='user_camera'>
        <pose>1.5 -4 2.5  0 0.5 1.6</pose>
        <view_controller>orbit</view_controller>
      </camera>
    </gui>
  </world>
</sdf>
